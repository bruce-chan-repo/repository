<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ytem.repository.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.ytem.repository.bean.Role">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="available" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="create_time" javaType="java.lang.String" jdbcType="TIMESTAMP" />
      <arg column="modified_time" javaType="java.lang.String" jdbcType="TIMESTAMP" />
    </constructor>
    
    <collection property="menuList" javaType="List" column="id" select="com.ytem.repository.dao.MenuMapper.selectMenuByRoleId"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, description, available, create_time, modified_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ytem_sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ytem_sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ytem.repository.bean.Role">
    insert into ytem_sys_role (id, role_name, description, 
      available, create_time, modified_time
      )
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{available,jdbcType=BIT}, NOW(), NOW()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ytem.repository.bean.Role">
    insert into ytem_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="available != null">
        available,
      </if>
        create_time,
        modified_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=BIT},
      </if>
        NOW(),
        NOW()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ytem.repository.bean.Role">
    update ytem_sys_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        modified_time = NOW(),
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ytem.repository.bean.Role">
    update ytem_sys_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectRoles" parameterType="Role" resultMap="BaseResultMap">
  	SELECT
  		*
  	FROM
  		ytem_sys_role
  	<where>
  		<if test="available != null">
  			available = #{available}
  		</if>
  	</where>
  </select>
  
  <delete id="deleteRoleMenu" parameterType="integer">
  	DELETE
  		FROM
  	ytem_sys_role_menu
  	WHERE
  		role_id = #{roleId}
  </delete>
  
  <insert id="addRoleMenu" parameterType="Role">
  	INSERT
  		INTO
  	ytem_sys_role_menu
  	(
  		role_id,
  		menu_id
  	)
  	VALUES
  	<foreach collection="menuList" item="menu" separator=",">
  		(
  			#{id},
  			#{menu.id}
  		)
  	</foreach>
  	
  </insert>
  
  <select id="selectRoleByRoleName" parameterType="Role" resultMap="BaseResultMap">
  	SELECT
  		<include refid="Base_Column_List" />
  	FROM
  		ytem_sys_role
  	<where>
		<if test="roleName != null and roleName != '' ">
			role_name = #{roleName}
		</if>  		
		<if test="id != null">
			AND id != #{id}
		</if>
  	</where>
  </select>
  
  <delete id="batchDeleteRole" parameterType="map">
  	DELETE
  		FROM	
  	ytem_sys_role
  	WHERE	
  		id IN (${roleIds})
  </delete>
  
  <delete id="batchDeleteRoleMenu" parameterType="map">
  	DELETE
  		FROM
 	ytem_sys_role_menu
 	WHERE
		role_id IN (${roleIds})  	
  </delete>
</mapper>